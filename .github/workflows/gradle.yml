# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PROJECT_NAME: ffxiv
  S3_BUCKET_NAME: ffxiv-springboot-build
  CODE_DEPLOY_APPLICATION_NAME: freelec-springboot2-webservice
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: freelec-springboot2-webservice-group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Build with Gradle
      run: ./gradlew clean build
      shell: bash

      #프로젝트 zip파일로 압축
    - name: Make Zip File
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash

    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

    - name: Deploy to AWS EC2 from S3
      run: aws deploy create-deployment \\
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \\
        --deployment-config-name CodeDeployDefault.AllAtOnce \\
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \\
        --s3-location bucket=$S3_BUCKET_NAME/$$PROJECT_NAME,key=$GITHUB_SHA.zip,bundleType=zip

